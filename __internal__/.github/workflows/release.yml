name: Create Release

on:
  push:
    branches:
      - master
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper versioning

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install
      
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
      - name: Create archive directory
        run: mkdir -p dist

      - name: Create clean repo archive
        run: |
          # Create a fresh temp directory
          mkdir -p /tmp/sdk-challenge-clean
          
          # Copy repository contents to the temp directory excluding unwanted files
          rsync -av --exclude='.git' --exclude='node_modules' --exclude='__internal__' --exclude='.github' --exclude='dist' . /tmp/sdk-challenge-clean/
          
          # Create the zip file
          cd /tmp
          zip -r $GITHUB_WORKSPACE/dist/sdk-challenge.zip sdk-challenge-clean
      
      - name: Calculate release version
        id: version
        run: |
          RELEASE_VERSION=$(git rev-parse --short HEAD)
          echo "version=${RELEASE_VERSION}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: SDK Challenge ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false
          files: |
            dist/sdk-challenge.zip